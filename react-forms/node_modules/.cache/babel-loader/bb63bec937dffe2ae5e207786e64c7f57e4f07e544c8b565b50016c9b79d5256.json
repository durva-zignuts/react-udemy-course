{"ast":null,"code":"var _jsxFileName = \"/Applications/React Course/React Udemy Course/react-forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  // const [formIsValid, setFormIsValid] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = false;\n\n  // useEffect(() => {\n  //   if (enteredNameIsValid) {\n  //     console.log(\"name input is valid\");\n  //   }\n  // }, [enteredNameIsValid]);\n\n  // useEffect(() => {\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n  // }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n\n    // if (event.target.value.trim() !== \"\") {\n    //   setEnteredNameIsValid(true);\n    //   return;\n    // }\n  };\n\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n\n    // if (enteredName.trim() === \"\") {\n    //   setEnteredNameIsValid(false);\n    // }\n  };\n\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    // setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n    // nameInputRef.current.value = \"\";\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n  const nameInputClasses = nameInputIsValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"email\",\n        id: \"email\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"Dct2M99UGjOAzmmh6TpkagnMzuE=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","nameInputRef","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameTouched","setEnteredNameTouched","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsValid","formIsValid","nameInputChangeHandler","event","target","value","emailInputChangeHandler","e","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","enteredValue","current","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Applications/React Course/React Udemy Course/react-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  // const [formIsValid, setFormIsValid] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = false;\n\n  // useEffect(() => {\n  //   if (enteredNameIsValid) {\n  //     console.log(\"name input is valid\");\n  //   }\n  // }, [enteredNameIsValid]);\n\n  // useEffect(() => {\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n  // }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n\n    // if (event.target.value.trim() !== \"\") {\n    //   setEnteredNameIsValid(true);\n    //   return;\n    // }\n  };\n\n  const emailInputChangeHandler = (e) => {\n    setEnteredEmail(e.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n\n    // if (enteredName.trim() === \"\") {\n    //   setEnteredNameIsValid(false);\n    // }\n  };\n\n  const emailInputBlurHandler = (e) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    // setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n    // nameInputRef.current.value = \"\";\n    setEnteredName(\"\");\n\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsValid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"email\">Your E-Mail</label>\n        <input\n          ref={nameInputRef}\n          type=\"email\"\n          id=\"email\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsValid && (\n          <p className=\"error-text\">Please enter a valid email.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}