{"ast":null,"code":"var _jsxFileName = \"/Applications/React Course/React Udemy Course/react-forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== \"\");\n  const nameInputRef = useRef();\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\" && enteredEmail.trim().includes(\"@\");\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n  };\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    // setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n    // nameInputRef.current.value = \"\";\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputIsValid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"d5wfvl9NwhIg4O7WFZp12JhcI/U=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useRef","useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","trim","nameInputRef","enteredEmail","setEnteredEmail","enteredNameTouched","setEnteredNameTouched","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInvalid","formIsValid","emailInputChangeHandler","e","target","emailInputBlurHandler","formSubmissionHandler","event","preventDefault","console","log","enteredValue","current","setEnteredName","nameInputClasses","nameInputIsValid","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","onChange","nameInputChangeHandler","onBlur","nameInputBlurHandler","disabled","_c","$RefreshReg$"],"sources":["/Applications/React Course/React Udemy Course/react-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const nameInputRef = useRef();\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredEmailIsValid =\n    enteredEmail.trim() !== \"\" && enteredEmail.trim().includes(\"@\");\n\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = (e) => {\n    setEnteredEmail(e.target.value);\n  };\n\n  const emailInputBlurHandler = (e) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    // setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n    // nameInputRef.current.value = \"\";\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsValid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your E-Mail</label>\n        <input\n          ref={nameInputRef}\n          type=\"email\"\n          id=\"email\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && (\n          <p className=\"error-text\">Please enter a valid email.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}