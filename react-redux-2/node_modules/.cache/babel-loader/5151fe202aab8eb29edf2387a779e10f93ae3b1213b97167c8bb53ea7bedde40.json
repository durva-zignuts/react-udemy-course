{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => {\n        item.id === newItem.id;\n      });\n      if (!existingItem) {\n        state.items.push();\n      }\n    },\n    removeItemTocart() {}\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","removeItemTocart","cartActions","actions"],"sources":["/Applications/React Course/React Udemy Course/react-redux-2/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => {\n        item.id === newItem.id;\n      });\n      if (!existingItem) {\n        state.items.push();\n      }\n    },\n    removeItemTocart() {},\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAK;QAC9CA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE;MACxB,CAAC,CAAC;MACF,IAAI,CAACH,YAAY,EAAE;QACjBJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC,CAAC;MACpB;IACF,CAAC;IACDC,gBAAgBA,CAAA,EAAG,CAAC;EACtB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGjB,SAAS,CAACkB,OAAO;AAE5C,eAAelB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}